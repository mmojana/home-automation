package ch.mojanam.mysensorsthing.mysensors.serialprotocol;

import java.util.Arrays;
import java.util.stream.Stream;

public enum Type {
    S_DOOR(0, Command.PRESENTATION),
    S_MOTION(1, Command.PRESENTATION),
    S_SMOKE(2, Command.PRESENTATION),
    S_BINARY(3, Command.PRESENTATION),
    S_DIMMER(4, Command.PRESENTATION),
    S_COVER(5, Command.PRESENTATION),
    S_TEMP(6, Command.PRESENTATION),
    S_HUM(7, Command.PRESENTATION),
    S_BARO(8, Command.PRESENTATION),
    S_WIND(9, Command.PRESENTATION),
    S_RAIN(10, Command.PRESENTATION),
    S_UV(11, Command.PRESENTATION),
    S_WEIGHT(12, Command.PRESENTATION),
    S_POWER(13, Command.PRESENTATION),
    S_HEATER(14, Command.PRESENTATION),
    S_DISTANCE(15, Command.PRESENTATION),
    S_LIGHT_LEVEL(16, Command.PRESENTATION),
    S_ARDUINO_NODE(17, Command.PRESENTATION),
    S_ARDUINO_REPEATER_NODE(18, Command.PRESENTATION),
    S_LOCK(19, Command.PRESENTATION),
    S_IR(20, Command.PRESENTATION),
    S_WATER(21, Command.PRESENTATION),
    S_AIR_QUALITY(22, Command.PRESENTATION),
    S_CUSTOM(23, Command.PRESENTATION),
    S_DUST(24, Command.PRESENTATION),
    S_SCENE_CONTROLLER(25, Command.PRESENTATION),
    S_RGB_LIGHT(26, Command.PRESENTATION),
    S_RGBW_LIGHT(27, Command.PRESENTATION),
    S_COLOR_SENSOR(28, Command.PRESENTATION),
    S_HVAC(29, Command.PRESENTATION),
    S_MULTIMETER(30, Command.PRESENTATION),
    S_SPRINKLER(31, Command.PRESENTATION),
    S_WATER_LEAK(32, Command.PRESENTATION),
    S_SOUND(33, Command.PRESENTATION),
    S_VIBRATION(34, Command.PRESENTATION),
    S_MOISTURE(35, Command.PRESENTATION),
    S_INFO(36, Command.PRESENTATION),
    S_GAS(37, Command.PRESENTATION),
    S_GPS(38, Command.PRESENTATION),
    S_WATER_QUALITY(39, Command.PRESENTATION),
    V_TEMP(0, Command.SET, Command.REQ),
    V_HUM(1, Command.SET, Command.REQ),
    V_STATUS(2, Command.SET, Command.REQ),
    V_PERCENTAGE(3, Command.SET, Command.REQ),
    V_PRESSURE(4, Command.SET, Command.REQ),
    V_FORECAST(5, Command.SET, Command.REQ),
    V_RAIN(6, Command.SET, Command.REQ),
    V_RAINRATE(7, Command.SET, Command.REQ),
    V_WIND(8, Command.SET, Command.REQ),
    V_GUST(9, Command.SET, Command.REQ),
    V_DIRECTION(10, Command.SET, Command.REQ),
    V_UV(11, Command.SET, Command.REQ),
    V_WEIGHT(12, Command.SET, Command.REQ),
    V_DISTANCE(13, Command.SET, Command.REQ),
    V_IMPEDANCE(14, Command.SET, Command.REQ),
    V_ARMED(15, Command.SET, Command.REQ),
    V_TRIPPED(16, Command.SET, Command.REQ),
    V_WATT(17, Command.SET, Command.REQ),
    V_KWH(18, Command.SET, Command.REQ),
    V_SCENE_ON(19, Command.SET, Command.REQ),
    V_SCENE_OFF(20, Command.SET, Command.REQ),
    V_HVAC_FLOW_STATE(21, Command.SET, Command.REQ),
    V_HVAC_SPEED(22, Command.SET, Command.REQ),
    V_LIGHT_LEVEL(23, Command.SET, Command.REQ),
    V_VAR1(24, Command.SET, Command.REQ),
    V_VAR2(25, Command.SET, Command.REQ),
    V_VAR3(26, Command.SET, Command.REQ),
    V_VAR4(27, Command.SET, Command.REQ),
    V_VAR5(28, Command.SET, Command.REQ),
    V_UP(29, Command.SET, Command.REQ),
    V_DOWN(30, Command.SET, Command.REQ),
    V_STOP(31, Command.SET, Command.REQ),
    V_IR_SEND(32, Command.SET, Command.REQ),
    V_IR_RECEIVE(33, Command.SET, Command.REQ),
    V_FLOW(34, Command.SET, Command.REQ),
    V_VOLUME(35, Command.SET, Command.REQ),
    V_LOCK_STATUS(36, Command.SET, Command.REQ),
    V_LEVEL(37, Command.SET, Command.REQ),
    V_VOLTAGE(38, Command.SET, Command.REQ),
    V_CURRENT(39, Command.SET, Command.REQ),
    V_RGB(40, Command.SET, Command.REQ),
    V_RGBW(41, Command.SET, Command.REQ),
    V_ID(42, Command.SET, Command.REQ),
    V_UNIT_PREFIX(43, Command.SET, Command.REQ),
    V_HVAC_SETPOINT_COOL(44, Command.SET, Command.REQ),
    V_HVAC_SETPOINT_HEAT(45, Command.SET, Command.REQ),
    V_HVAC_FLOW_MODE(46, Command.SET, Command.REQ),
    V_TEXT(47, Command.SET, Command.REQ),
    V_CUSTOM(48, Command.SET, Command.REQ),
    V_POSITION(49, Command.SET, Command.REQ),
    V_IR_RECORD(50, Command.SET, Command.REQ),
    V_PH(51, Command.SET, Command.REQ),
    V_ORP(52, Command.SET, Command.REQ),
    V_EC(53, Command.SET, Command.REQ),
    V_VAR(54, Command.SET, Command.REQ),
    V_VA(55, Command.SET, Command.REQ),
    V_POWER_FACTOR(56, Command.SET, Command.REQ),
    I_BATTERY_LEVEL(0, Command.INTERNAL),
    I_TIME(1, Command.INTERNAL),
    I_VERSION(2, Command.INTERNAL),
    I_ID_REQUEST(3, Command.INTERNAL),
    I_ID_RESPONSE(4, Command.INTERNAL),
    I_INCLUSION_MODE(5, Command.INTERNAL),
    I_CONFIG(6, Command.INTERNAL),
    I_FIND_PARENT(7, Command.INTERNAL),
    I_FIND_PARENT_RESPONSE(8, Command.INTERNAL),
    I_LOG_MESSAGE(9, Command.INTERNAL),
    I_CHILDREN(10, Command.INTERNAL),
    I_SKETCH_NAME(11, Command.INTERNAL),
    I_SKETCH_VERSION(12, Command.INTERNAL),
    I_REBOOT(13, Command.INTERNAL),
    I_GATEWAY_READY(14, Command.INTERNAL),
    I_SIGNING_PRESENTATION(15, Command.INTERNAL),
    I_NONCE_REQUEST(16, Command.INTERNAL),
    I_NONCE_RESPONSE(17, Command.INTERNAL),
    I_HEARTBEAT_REQUEST(18, Command.INTERNAL),
    I_PRESENTATION(19, Command.INTERNAL),
    I_DISCOVER_REQUEST(20, Command.INTERNAL),
    I_DISCOVER_RESPONSE(21, Command.INTERNAL),
    I_HEARTBEAT_RESPONSE(22, Command.INTERNAL),
    I_LOCKED(23, Command.INTERNAL),
    I_PING(24, Command.INTERNAL),
    I_PONG(25, Command.INTERNAL),
    I_REGISTRATION_REQUEST(26, Command.INTERNAL),
    I_REGISTRATION_RESPONSE(27, Command.INTERNAL),
    I_DEBUG(28, Command.INTERNAL);

    Integer value;
    Command[] commands;

    Type(Integer value, Command... commands) {
        this.value = value;
        this.commands = commands;
    }

    static Type fromValue(Integer value, Command command) {
        return Stream.of(Type.values())
                .filter(t -> t.value.equals(value) && Arrays.asList(t.commands).contains(command))
                .findFirst()
                .orElseThrow(IllegalArgumentException::new);
    }

}
